local https = require("ssl.https")
local json = require("cjson")

-- URL do arquivo que contém as informações de comportamento dos executores
local executorInfoUrl = "https://raw.githubusercontent.com/DragonSCP/Los-SCP-Script-Automator/main/genereto1.py"

-- Função para buscar e processar as informações de comportamento dos executores
local function fetchExecutorInfo()
    local response_body = {}
    local _, status_code, _, _ = https.request{
        url = executorInfoUrl,
        headers = {
            ["User-Agent"] = "Lua-GitHub-Script"
        },
        sink = ltn12.sink.table(response_body)
    }

    if status_code == 200 then
        local executorInfo = table.concat(response_body)
        -- Avalia o conteúdo como Lua para obter as informações dos executores
        local executorData = load(executorInfo)()
        return executorData
    else
        print("Erro ao buscar informações de comportamento dos executores:", status_code)
        return nil
    end
end

-- Função para gerar um script baseado nas informações do executor escolhido
local function generateScriptForExecutor(executorName, executorData)
    local executorInfo = executorData[executorName]
    if executorInfo then
        print("Gerando script para o executor:", executorName)
        print("Comportamento do executor:")
        print(executorInfo["comportamento_lua"])
        print("Exemplo de script:")
        print(executorInfo["exemplo_script"])
        -- Aqui você pode incluir lógica para gerar o script conforme necessário
        -- Por exemplo, baseado nas funções disponíveis no executor, ou comportamentos específicos
    else
        print("Executor não encontrado ou informações insuficientes.")
    end
end

-- Função principal para interação com o usuário e geração de scripts
local function main()
    -- Busca e processa as informações de comportamento dos executores
    local executorData = fetchExecutorInfo()

    if executorData then
        -- Diálogo com o usuário para escolher o executor
        print("Escolha um executor para gerar o script:")
        for executorName, _ in pairs(executorData) do
            print("-", executorName)
        end

        io.write("> ")
        local choice = io.read()

        -- Verifica se o executor escolhido existe nas informações carregadas
        if executorData[choice] then
            generateScriptForExecutor(choice, executorData)
        else
            print("Executor não encontrado. Por favor, escolha um executor válido.")
        end
    else
        print("Não foi possível carregar as informações de comportamento dos executores.")
    end
end

-- Inicia a execução do script
main()
